{"version":3,"sources":["components/ContactInfo/ContactInfo.js","components/ContactForm/ContactForm.js","pages/Contact/Contact.js","components/PageHeading/PageHeading.js"],"names":["ContactInfo","title","content","className","PageHeading","small","map","text","index","key","ErrorMsg","touched","message","validationSchema","Yup","shape","name","min","max","required","email","ContactForm","initialValues","onSubmit","values","setSubmitting","resetForm","setTimeout","alert","JSON","stringify","errors","handleChange","handleBlur","handleSubmit","isSubmitting","type","placeholder","onChange","onBlur","value","disabled","CONTACT_DETAILS_DATA","Contact","large","detail","Modifiers","IS_SMALL","IS_NORMAL","IS_LARGE","props","children","scales","modifier","normal","generateClassName"],"mappings":"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","file":"static/js/10.eb58dacb.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport \"./ContactInfo.scss\";\r\n\r\nimport PageHeading from \"../PageHeading\";\r\n\r\nconst ContactInfo = ({ title, content }) => {\r\n  return (\r\n    <div className=\"contact-info\">\r\n      <PageHeading small>{title}</PageHeading>\r\n      {content.map((text, index) => {\r\n        return (\r\n          <p className=\"contact-info__content\" key={index}>\r\n            {text}\r\n          </p>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactInfo;\r\n","import React from \"react\";\r\n\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport \"./ContactForm.scss\";\r\n\r\nconst ErrorMsg = ({ touched, message }) => {\r\n  let content;\r\n\r\n  if (!touched) {\r\n    content = null;\r\n  } else if (message) {\r\n    content = <div className=\"err-msg err-msg--has-error\">{message}</div>;\r\n  } else {\r\n    content = <div className=\"err-msg\">Field is OK</div>;\r\n  }\r\n\r\n  return content;\r\n};\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  name: Yup.string()\r\n    .min(6, \"Must have at least 6 characters\")\r\n    .max(255, \"Must not exceed 255 characters\")\r\n    .required(\"Must enter a name\"),\r\n  email: Yup.string()\r\n    .email(\"Must be a valid email adress\")\r\n    .max(255, \"Must not exceed 255 characters\")\r\n    .required(\"Must enter an email adress\"),\r\n  message: Yup.string()\r\n    .min(6, \"Must have at least 20 characters\")\r\n    .max(255, \"Must not exceed 255 characters\")\r\n    .required(\"Must enter a message\")\r\n});\r\n\r\nconst ContactForm = () => (\r\n  <Formik\r\n    initialValues={{\r\n      name: \"\",\r\n      email: \"\",\r\n      message: \"\"\r\n    }}\r\n    validationSchema={validationSchema}\r\n    onSubmit={(values, { setSubmitting, resetForm }) => {\r\n      setSubmitting(true);\r\n\r\n      setTimeout(() => {\r\n        alert(JSON.stringify(values, null, 2));\r\n        setSubmitting(false);\r\n        resetForm();\r\n      }, 750);\r\n    }}\r\n  >\r\n    {({\r\n      values,\r\n      errors,\r\n      touched,\r\n      handleChange,\r\n      handleBlur,\r\n      handleSubmit,\r\n      isSubmitting\r\n    }) => (\r\n      <form className=\"contact-form\" onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          placeholder=\"Name\"\r\n          onChange={handleChange}\r\n          onBlur={handleBlur}\r\n          value={values.name}\r\n          className={errors.name && touched.name ? \"--has-error\" : null}\r\n        />\r\n        <ErrorMsg touched={touched.name} message={errors.name} />\r\n        <input\r\n          type=\"email\"\r\n          name=\"email\"\r\n          placeholder=\"Email\"\r\n          onChange={handleChange}\r\n          onBlur={handleBlur}\r\n          value={values.email}\r\n          className={errors.email && touched.email ? \"--has-error\" : null}\r\n        />\r\n        <ErrorMsg touched={touched.email} message={errors.email} />\r\n        <textarea\r\n          name=\"message\"\r\n          placeholder=\"Message\"\r\n          onChange={handleChange}\r\n          onBlur={handleBlur}\r\n          value={values.message}\r\n          className={errors.message && touched.message ? \"--has-error\" : null}\r\n        ></textarea>\r\n        <ErrorMsg touched={touched.message} message={errors.message} />\r\n        <button type=\"submit\" disabled={isSubmitting}>\r\n          send message\r\n        </button>\r\n      </form>\r\n    )}\r\n  </Formik>\r\n);\r\n\r\nexport default ContactForm;\r\n","import React from \"react\";\r\n\r\nimport \"./Contact.scss\";\r\n\r\nimport PageHeading from \"../../components/PageHeading\";\r\nimport ContactInfo from \"../../components/ContactInfo\";\r\nimport ContactForm from \"../../components/ContactForm\";\r\n\r\nconst CONTACT_DETAILS_DATA = [\r\n  {\r\n    title: \"Reservations\",\r\n    content: [\"Please call\", \"(00) 123-456-789\"],\r\n  },\r\n  {\r\n    title: \"Address\",\r\n    content: [\"Street Name, Number\", \"City Name, Postal Code, Country Name\"],\r\n  },\r\n  {\r\n    title: \"Opening hours\",\r\n    content: [\"Mon-Thurs: 10:00 - 23:00\", \"Fri-Sun: 11:00 - 02:00\"],\r\n  },\r\n];\r\n\r\nconst renderContactDetails = (data) =>\r\n  data.map((detail, index) => {\r\n    return <ContactInfo {...detail} key={index} />;\r\n  });\r\n\r\nconst Contact = () => {\r\n  return (\r\n    <section className=\"contact\">\r\n      <PageHeading large>get in touch with us</PageHeading>\r\n      <section className=\"contact__details\">\r\n        {renderContactDetails(CONTACT_DETAILS_DATA)}\r\n      </section>\r\n      <PageHeading small>send us a message</PageHeading>\r\n      <ContactForm />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n","import React from \"react\";\r\n\r\nimport \"./PageHeading.scss\";\r\n\r\nclass Modifiers {\r\n  static IS_SMALL = \"--is-small\";\r\n  static IS_NORMAL = \"--is-normal\";\r\n  static IS_LARGE = \"--is-large\";\r\n}\r\nconst BASE_CLASS_NAME = \"page-heading\";\r\n\r\nconst PageHeading = props => {\r\n  const { children, ...scales } = props;\r\n\r\n  const generateClassName = scales => {\r\n    const { small, normal, large } = scales;\r\n    let modifier;\r\n\r\n    if (small) {\r\n      modifier = Modifiers.IS_SMALL;\r\n    } else if (normal) {\r\n      modifier = Modifiers.IS_NORMAL;\r\n    } else if (large) {\r\n      modifier = Modifiers.IS_LARGE;\r\n    }\r\n\r\n    return modifier\r\n      ? `${BASE_CLASS_NAME} ${BASE_CLASS_NAME}${modifier}`\r\n      : BASE_CLASS_NAME;\r\n  };\r\n\r\n  return <h2 className={generateClassName(scales)}>{children}</h2>;\r\n};\r\n\r\nexport default PageHeading;\r\n"],"sourceRoot":""}