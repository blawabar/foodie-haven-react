{"version":3,"sources":["ErrorInfo.scss","../../partials/_mixins.scss"],"names":[],"mappings":"AAGA,YCIE,SAAU,CACV,aAAc,CAPd,YAAa,CACb,sBAF4C,CAG5C,kBAHgE,CDWhE,YAAa,CACb,iBAAkB,CA+CnB,qCAxDD,YCQI,YAL6B,CDqDhC,CA7CC,uCAEE,eAAgB,CACjB,kBAGC,eAhBoB,CAiBpB,wBAAyB,CACzB,aAAc,CACd,sBAAuB,CACxB,qBAGC,cAAqB,CACrB,cAvBsB,CAwBtB,iBAAkB,CAHnB,kCAMG,wBAAyB,CAC1B,sBAID,aAAc,CACd,aAAc,CACd,gBAAkB,CAClB,UAAW,CACX,mCAAoC,CACpC,kBAAmB,CACnB,cArCuB,CAsCvB,oBAAqB,CACrB,yBAA0B,CAC3B,qCAGC,kBACE,eAAgC,CACjC,qBAEC,gBAAmC,CACpC,sBAEC,cAAoC,CACrC","file":"7.636f1347.chunk.css","sourcesContent":["@import '../../partials/variables';\r\n@import '../../partials/mixins';\r\n\r\n.error-info {\r\n  $code-font-size: 120px;\r\n  $message-font-size: 25px;\r\n  $link-btn-font-size: 12px;\r\n\r\n  @include use-wrapper();\r\n  @include center-with-flex();\r\n\r\n  height: 100vh;\r\n  text-align: center;\r\n\r\n  &__code,\r\n  &__message {\r\n    font-weight: 400;\r\n  }\r\n\r\n  &__code {\r\n    font-size: $code-font-size;\r\n    text-transform: uppercase;\r\n    line-height: 1;\r\n    color: var(--gray-dark);\r\n  }\r\n\r\n  &__message {\r\n    margin: 1.2em 0 1.2em;\r\n    font-size: $message-font-size;\r\n    color: var(--gray);\r\n\r\n    &::first-letter {\r\n      text-transform: uppercase;\r\n    }\r\n  }\r\n\r\n  &__link-btn {\r\n    display: block;\r\n    margin: 0 auto;\r\n    padding: 0.5em 1em;\r\n    width: 14em;\r\n    background-color: var(--orange-dark);\r\n    color: var(--white);\r\n    font-size: $link-btn-font-size;\r\n    text-decoration: none;\r\n    text-transform: capitalize;\r\n  }\r\n\r\n  @include use-mq-manager($mq-bp-lg) {\r\n    &__code {\r\n      font-size: $code-font-size * 1.5;\r\n    }\r\n    &__message {\r\n      font-size: $message-font-size * 1.5;\r\n    }\r\n    &__link-btn {\r\n      font-size: $link-btn-font-size * 1.5;\r\n    }\r\n  }\r\n}\r\n","@mixin center-with-flex($justification: center, $alignment: center) {\r\n  display: flex;\r\n  justify-content: $justification;\r\n  align-items: $alignment;\r\n}\r\n\r\n@mixin use-wrapper($width: 1200px) {\r\n  width: 90%;\r\n  margin: 0 auto;\r\n\r\n  @media screen and (min-width: 1280px) {\r\n    width: $width;\r\n  }\r\n}\r\n\r\n// 2. Create function which returns mq-value\r\n@function get-mq-value($breakpoint) {\r\n  $value: null;\r\n\r\n  @if $breakpoint {\r\n    $value: map-get(\r\n      $map: $media-queries,\r\n      $key: $breakpoint,\r\n    );\r\n  } @else {\r\n    @error 'Please provide a valid breakpoint value.';\r\n  }\r\n\r\n  @return $value;\r\n}\r\n\r\n// 3. Create function which decodes mq args\r\n// 3.1 If arglist is a vector\r\n//  - take all args and put them together into a list,\r\n//  - output the list content as a single string in which every item must be separated by a space and a comma,\r\n// 3.2 If arglist has a single value\r\n//  - return just a valid mq value if present\r\n\r\n@function decode-mq-args($args...) {\r\n  $result: null;\r\n  $list-len: length($args);\r\n  $mq-value: null;\r\n\r\n  @if $list-len > 1 {\r\n    @for $i from 1 through $list-len {\r\n      $breakpoint: nth($args, $i);\r\n      $mq-value: get-mq-value($breakpoint);\r\n\r\n      @if $mq-value {\r\n        @if $i == 1 {\r\n          $result: $mq-value;\r\n        } @else {\r\n          $result: '#{$result}, #{$mq-value}';\r\n        }\r\n      } @else {\r\n        @error 'There is no media query value for \"#{$breakpoint}\" in the media-queries map.';\r\n      }\r\n    }\r\n  } @else if $list-len == 1 {\r\n    $breakpoint: nth($args, 1);\r\n    $mq-value: get-mq-value($breakpoint);\r\n\r\n    @if $mq-value {\r\n      $result: $mq-value;\r\n    } @else {\r\n      @error 'There is no media query value for \"#{$breakpoint}\" in the media-queries map.';\r\n    }\r\n  }\r\n\r\n  @return $result;\r\n}\r\n\r\n// 4. Create a mixin which uses the decode-mq-args function\r\n@mixin use-mq-manager($breakpoints...) {\r\n  $mq-value: decode-mq-args($breakpoints...);\r\n\r\n  @if $mq-value {\r\n    @media screen and #{$mq-value} {\r\n      @content;\r\n    }\r\n  }\r\n}\r\n\r\n// Here we have to possibilities to scale the image:\r\n// - by setting only the 'width' property to 'auto' value,\r\n// - be setting together 'width' and 'height' to 'auto' and 100% respectively,\r\n@mixin use-image-holder($scaling-type, $breakpoints...) {\r\n  @include use-mq-manager($breakpoints...) {\r\n    overflow: hidden;\r\n    position: relative;\r\n  }\r\n\r\n  img {\r\n    display: block;\r\n    width: 100%;\r\n\r\n    @include use-mq-manager($breakpoints...) {\r\n      position: absolute;\r\n      top: 50%;\r\n      left: 50%;\r\n      transform: translate(-50%, -50%);\r\n\r\n      @if $scaling-type == auto {\r\n        width: auto;\r\n      } @else if $scaling-type == stretch {\r\n        height: 100%;\r\n        width: auto;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n@mixin normalize-button {\r\n  padding: 0.75em 1em;\r\n  background-color: var(--orange-dark);\r\n  font-size: 12px;\r\n  letter-spacing: 1px;\r\n  text-transform: uppercase;\r\n  text-decoration: none;\r\n  color: white;\r\n\r\n  @include use-mq-manager($mq-bp-lg) {\r\n    font-size: 16px;\r\n  }\r\n}\r\n"]}